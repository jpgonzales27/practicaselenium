<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs once before class]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs before every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> testMethod2]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs after every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs before every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> testMethod1]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs after every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs once after class]]>
    </line>
  </reporter-output>
  <suite started-at="2021-01-03T18:51:25 BOT" name="Regression TestSuite" finished-at="2021-01-03T18:51:26 BOT" duration-ms="125">
    <groups>
    </groups>
    <test started-at="2021-01-03T18:51:25 BOT" name="Application Test" finished-at="2021-01-03T18:51:26 BOT" duration-ms="125">
      <class name="testNgPractica.test.TestReporting">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:25 BOT" name="setUp" finished-at="2021-01-03T18:51:25 BOT" duration-ms="15" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs once before class]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMethod2()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:25 BOT" name="testMethod2" finished-at="2021-01-03T18:51:25 BOT" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testNgPractica.test.TestReporting.testMethod2(TestReporting.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> testMethod2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:25 BOT" name="beforeMethod" finished-at="2021-01-03T18:51:25 BOT" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs before every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:25 BOT" name="beforeMethod" finished-at="2021-01-03T18:51:25 BOT" duration-ms="16" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs before every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:25 BOT" name="afterMethod" finished-at="2021-01-03T18:51:25 BOT" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs after every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:25 BOT" name="afterMethod" finished-at="2021-01-03T18:51:25 BOT" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs after every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testMethod1()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:25 BOT" name="testMethod1" finished-at="2021-01-03T18:51:25 BOT" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> testMethod1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod3()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:25 BOT" name="testMethod3" finished-at="2021-01-03T18:51:25 BOT" depends-on-methods="testNgPractica.test.TestReporting.testMethod2" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestReporting.testMethod3()[pri:0, instance:testNgPractica.test.TestReporting@76b10754] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestReporting.testMethod3()[pri:0, instance:testNgPractica.test.TestReporting@76b10754] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:101)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testNgPractica.test.TestReporting@76b10754]" started-at="2021-01-03T18:51:26 BOT" name="cleanUp" finished-at="2021-01-03T18:51:26 BOT" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs once after class]]>
            </line>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testNgPractica.test.TestReporting -->
    </test> <!-- Application Test -->
  </suite> <!-- Regression TestSuite -->
</testng-results>
